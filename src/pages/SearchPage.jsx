import React, { useState, useEffect } from 'react';

import * as XLSX from 'xlsx';



const cellStyle = {

  padding: "6px",

  border: "1px solid #ccc",

  textAlign: "center",

  fontSize: "11px",

  wordBreak: "break-word"

};



function SearchPage() {

  const [citizenId, setCitizenId] = useState('');

  const [fullname, setFullname] = useState('');

  const [fromDate, setFromDate] = useState('');

  const [toDate, setToDate] = useState('');

  const [results, setResults] = useState([]);

  const [filteredResults, setFilteredResults] = useState([]);

  const [message, setMessage] = useState('');

  const [statusFilter, setStatusFilter] = useState('all');

  const [username, setUsername] = useState('');






  const handleSearch = async (e) => {

    e.preventDefault();

    setMessage('');

    setResults([]);



    try {

      const baseURL = `${window.location.origin}/project/backend`;



const res = await fetch(`${baseURL}/search_range.php`, {

  method: 'POST',

  headers: { 'Content-Type': 'application/json' },

  body: JSON.stringify({

    citizen_id: citizenId,

    from_date: fromDate,

    to_date: toDate

  })

});





      const data = await res.json();



      if (data.success && data.records) {

        setResults(data.records);

        setFullname(data.fullname || '');



      } else {

        setMessage(data.message || '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');

        setFullname('');

      }

    } catch (error) {

      setMessage('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå');

    }

  };



  const handlePrint = () => {

    const printContents = document.getElementById('print-section').innerHTML;

    const w = window.open('', '', 'width=1200,height=800');

    w.document.write('<html><head><title>‡∏û‡∏¥‡∏°‡∏û‡πå‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</title>');

    w.document.write('<style>table, th, td { border: 1px solid black; border-collapse: collapse; padding: 4px; font-size: 11px; } input { border: none; width: 100%; text-align: center; }</style>');

    w.document.write('</head><body>');

    w.document.write(`<div style="text-align:center;font-weight:bold;">‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</div>`);

    w.document.write(printContents); // ‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ï‡∏£ ‡∏õ‡∏ä‡∏ä./‡∏ä‡∏∑‡πà‡∏≠ ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô print-section ‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ã‡πâ‡∏≥

    w.document.write(`<div style="position:fixed; bottom:5px; left:5px; font-size:10px;">‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: ${username}</div>`);

    w.document.write('</body></html>');

    w.document.close();

    w.print();

  };



  const exportToExcel = () => {

    const worksheet = XLSX.utils.json_to_sheet(filteredResults);

    const workbook = XLSX.utils.book_new();

    XLSX.utils.book_append_sheet(workbook, worksheet, 'Report');

    XLSX.writeFile(workbook, 'report.xlsx');

  };



  const filterResults = () => {

    let filtered = [...results];

    if (statusFilter !== 'all') {

      filtered = filtered.filter(r => r.status === statusFilter);

    }

    setFilteredResults(filtered);

  };



  const formatThaiDate = (dateStr) => {

    const date = new Date(dateStr);

    const day = date.getDate();

    const month = date.getMonth() + 1;

    const year = date.getFullYear() + 543;

    return `${day}/${month}/${year}`;

  };



  return (

    <form className="card" onSubmit={handleSearch} style={{ maxWidth: '1000px', margin: 'auto' }}>

      <h2>‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</h2>



      <div className="field">

        <label>‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô</label>

        <input type="text" value={citizenId} onChange={(e) => setCitizenId(e.target.value)} required />

      </div>



      <div className="field">

        <label>‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</label>

        <input type="date" value={fromDate} onChange={(e) => setFromDate(e.target.value)} required />

      </div>



      <div className="field">

        <label>‡∏ñ‡∏∂‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</label>

        <input type="date" value={toDate} onChange={(e) => setToDate(e.target.value)} required />

      </div>



      <div className="field">

        <label>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</label>

        <select value={statusFilter} onChange={(e) => setStatusFilter(e.target.value)}>

          <option value="all">‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</option>

          <option value="‡∏°‡∏≤‡∏ï‡∏≤‡∏°‡∏ô‡∏±‡∏î">‡∏°‡∏≤‡∏ï‡∏≤‡∏°‡∏ô‡∏±‡∏î</option>

          <option value="‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏≤">‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏≤</option>

        </select>

      </div>



      <button type="submit">‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</button>



      {message && <p className="message error">{message}</p>}



      {filteredResults.length > 0 && (

        <>

          <button type="button" onClick={handlePrint} style={{ marginTop: 15, marginRight: 10 }}>

            üñ®Ô∏è ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô

          </button>

          <button type="button" onClick={exportToExcel} style={{ marginTop: 15 }}>

            üì• Export Excel

          </button>



          <div id="print-section" className="result-box" style={{ background: "#fcffe6", border: "1px solid #c4e36a", padding: "15px", borderRadius: "10px", marginTop: "10px", overflowX: "auto" }}>

            <div style={{ marginBottom: 8 }}>

              <strong>‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô:</strong> {citizenId} <br />

              <strong>‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡πá‡∏°:</strong> {fullname}

            </div>

            <table style={{ width: "100%", borderCollapse: "collapse", marginTop: "10px" }}>

              <thead style={{ background: "#e8f5c8" }}>

                <tr>

                  <th style={cellStyle}>‡∏ß‡∏±‡∏ô‡∏ô‡∏±‡∏î</th>

                  <th style={cellStyle}>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>

                  <th style={cellStyle}>‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏≤</th>

                  <th style={cellStyle}>‡∏Ç‡∏ô‡∏≤‡∏î‡∏¢‡∏≤</th>

                  <th style={cellStyle}>‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</th>

                  <th style={cellStyle}>‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà</th>

                  <th style={cellStyle}>‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô</th>

                </tr>

              </thead>

              <tbody>

                {filteredResults.map((item, idx) => (

                  <tr key={idx}>

                    <td style={cellStyle}>{formatThaiDate(item.appointment_date)}</td>

                    <td style={{ ...cellStyle, color: item.status.includes("‡∏°‡∏≤‡∏ï‡∏≤‡∏°‡∏ô‡∏±‡∏î") ? "green" : "red", fontWeight: "bold" }}>{item.status}</td>

                    <td style={cellStyle}>{item.drug_name || "-"}</td>

                    <td style={cellStyle}>{item.dose || "-"}</td>

                    <td style={cellStyle}>{item.position || "-"}</td>

                    <td style={cellStyle}>{item.clinic_name || "-"}</td>

                    <td style={cellStyle}>{item.signature || "-"}</td>

                  </tr>

                ))}

              </tbody>

            </table>

          </div>

        </>

      )}

    </form>

  );

}



export default SearchPage;

